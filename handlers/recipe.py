import types

from aiogram import Router, F, types
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

from keyboards import get_main_keyboard
from models.yandex_gpt import get_yandex_gpt_response

router = Router()

RECIPE_PROMPT = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫—É–ª–∏–Ω–∞—Ä–∏–∏.
–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –±–ª–∏–Ω–æ–≤. –†–µ—Ü–µ–ø—Ç –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏ –ø–æ—à–∞–≥–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è.
–î–æ–±–∞–≤—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç –æ –±–ª–∏–Ω–∞—Ö –≤ –∫–æ–Ω—Ü–µ."""


@router.callback_query(F.data == "pancake_recipe")
async def send_pancake_recipe(callback: CallbackQuery):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –±–ª–∏–Ω–æ–≤"""
    await callback.message.answer("ü•û –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ä–µ—Ü–µ–ø—Ç –±–ª–∏–Ω–æ–≤... –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.")

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –º–æ–¥–µ–ª–∏
    messages = [
        {"role": "system", "text": RECIPE_PROMPT},
        {"role": "user", "text": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–¥—É–º–∞–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –±–ª–∏–Ω–æ–≤."}
    ]

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏
    recipe = get_yandex_gpt_response(messages)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
    builder.add(types.InlineKeyboardButton(text="üîÑ –î—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç", callback_data="pancake_recipe"))
    builder.adjust(1)

    await callback.message.answer(
        f"<b>ü•û –†–µ—Ü–µ–ø—Ç –±–ª–∏–Ω–æ–≤</b>\n\n{recipe}",
        reply_markup=builder.as_markup()
    )
    await callback.answer()


def register_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    dp.include_router(router)